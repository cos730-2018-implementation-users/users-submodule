{"version":3,"sources":["../../../app/controllers/users.js"],"names":["users","require","data","getAllUsersRequest","ctx","getAllUsers","then","k","body","addNewUserRequest","createUser","request","_result","getUserByIdRequest","getUserById","params","userid","deleteUserRequest","deleteUser","fullyUpdateUserRequest","updateUser","partiallyUpdateUserRequest","patchUser","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,sBAAR,CAAd;;AAEA,IAAIC,aAAJ;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,GAAD,EAAS;AAClCJ,QAAMK,WAAN,GAAoBC,IAApB,CAAyB,UAACC,CAAD,EAAO;AAC9BL,WAAOK,CAAP;AACD,GAFD;AAGAH,MAAII,IAAJ,GAAWN,IAAX;AACA,SAAOE,GAAP;AACD,CAND;;AAQA,IAAMK,oBAAoB,SAApBA,iBAAoB,CAACL,GAAD,EAAS;AACjCJ,QAAMU,UAAN,CAAiBN,IAAIO,OAAJ,CAAYH,IAA7B,EAAmCF,IAAnC,CAAwC,UAACC,CAAD,EAAO;AAC7CL,WAAOK,EAAEK,OAAT;AACD,GAFD;AAGAR,MAAII,IAAJ,GAAWN,IAAX;AACA,SAAOE,GAAP;AACD,CAND;;AAQA,IAAMS,qBAAqB,SAArBA,kBAAqB,CAACT,GAAD,EAAS;AAClCJ,QAAMc,WAAN,CAAkBV,IAAIW,MAAJ,CAAWC,MAA7B,EAAqCV,IAArC,CAA0C,UAACC,CAAD,EAAO;AAC/CL,WAAOK,CAAP;AACD,GAFD;AAGAH,MAAII,IAAJ,GAAWN,IAAX;AACA,SAAOE,GAAP;AACD,CAND;;AAQA,IAAMa,oBAAoB,SAApBA,iBAAoB,CAACb,GAAD,EAAS;AACjCJ,QAAMkB,UAAN,CAAiBd,IAAIW,MAAJ,CAAWC,MAA5B,EAAoCV,IAApC,CAAyC,UAACC,CAAD,EAAO;AAC9CL,WAAOK,CAAP;AACD,GAFD;AAGAH,MAAII,IAAJ,GAAWN,IAAX;AACA,SAAOE,GAAP;AACD,CAND;;AAQA,IAAMe,yBAAyB,SAAzBA,sBAAyB,CAACf,GAAD,EAAS;AACtCJ,QAAMoB,UAAN,CAAiBhB,IAAIW,MAAJ,CAAWC,MAA5B,EAAoCZ,IAAIO,OAAJ,CAAYH,IAAhD,EAAsDF,IAAtD,CAA2D,UAACC,CAAD,EAAO;AAChEL,WAAOK,CAAP;AACD,GAFD;AAGAH,MAAII,IAAJ,GAAWN,IAAX;AACA,SAAOE,GAAP;AACD,CAND;;AAQA,IAAMiB,6BAA6B,SAA7BA,0BAA6B,CAACjB,GAAD,EAAS;AAC1CJ,QAAMsB,SAAN,CAAgBlB,IAAIW,MAAJ,CAAWC,MAA3B,EAAmCZ,IAAIO,OAAJ,CAAYH,IAA/C,EAAqDF,IAArD,CAA0D,UAACC,CAAD,EAAO;AAC/DL,WAAOK,CAAP;AACD,GAFD;AAGAH,MAAII,IAAJ,GAAWN,IAAX;AACA,SAAOE,GAAP;AACD,CAND;;AAQAmB,OAAOC,OAAP,GAAiB;AACfrB,wCADe;AAEfM,sCAFe;AAGfI,wCAHe;AAIfI,sCAJe;AAKfE,gDALe;AAMfE;AANe,CAAjB","file":"users.js","sourcesContent":["const users = require('../services/database');\n\nlet data;\n\nconst getAllUsersRequest = (ctx) => {\n  users.getAllUsers().then((k) => {\n    data = k;\n  });\n  ctx.body = data;\n  return ctx;\n};\n\nconst addNewUserRequest = (ctx) => {\n  users.createUser(ctx.request.body).then((k) => {\n    data = k._result;\n  });\n  ctx.body = data;\n  return ctx;\n};\n\nconst getUserByIdRequest = (ctx) => {\n  users.getUserById(ctx.params.userid).then((k) => {\n    data = k;\n  });\n  ctx.body = data;\n  return ctx;\n};\n\nconst deleteUserRequest = (ctx) => {\n  users.deleteUser(ctx.params.userid).then((k) => {\n    data = k;\n  });\n  ctx.body = data;\n  return ctx;\n};\n\nconst fullyUpdateUserRequest = (ctx) => {\n  users.updateUser(ctx.params.userid, ctx.request.body).then((k) => {\n    data = k;\n  });\n  ctx.body = data;\n  return ctx;\n};\n\nconst partiallyUpdateUserRequest = (ctx) => {\n  users.patchUser(ctx.params.userid, ctx.request.body).then((k) => {\n    data = k;\n  });\n  ctx.body = data;\n  return ctx;\n};\n\nmodule.exports = {\n  getAllUsersRequest,\n  addNewUserRequest,\n  getUserByIdRequest,\n  deleteUserRequest,\n  fullyUpdateUserRequest,\n  partiallyUpdateUserRequest,\n};\n"]}