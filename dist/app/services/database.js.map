{"version":3,"sources":["../../../app/services/database.js"],"names":["require","config","db","Database","console","log","process","env","ARANGODB_USERNAME","useBasicAuth","ARANDODB_PASSWORD","useDatabase","collection","getAllUsers","query","cursor","all","result","Error","createUsers","module","exports"],"mappings":";;AAAA;;;;;;;;AACA;AACAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,IAAMC,KAAK,IAAIC,kBAAJ,CAAa,uBAAb,CAAX;AACA;AACAC,QAAQC,GAAR,CAAYC,QAAQC,GAAR,CAAYC,iBAAxB;AACAN,GAAGO,YAAH,CAAgBH,QAAQC,GAAR,CAAYC,iBAA5B,EAA+CF,QAAQC,GAAR,CAAYG,iBAA3D,E,CAA+E;;AAE/E;AACA;AACA;AACA;;AAEAR,GAAGS,WAAH,CAAe,OAAf;;AAGA,IAAMC,aAAaV,GAAGU,UAAH,CAAc,aAAd,CAAnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAMC;AAAA,qEAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKX,GAAGY,KAAH,CAAS,mCAAT,CAFL;;AAAA;AAEVC,kBAFU;AAAA;AAAA,mBAGKA,OAAOC,GAAP,EAHL;;AAAA;AAGVC,kBAHU;AAAA,6CAITA,MAJS;;AAAA;AAAA;AAAA;AAAA,kBAMV,IAAIC,KAAJ,aANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAUA,IAAMC;AAAA,sEAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKjB,GAAGY,KAAH,CAAS,sEAAT,CAFL;;AAAA;AAEVC,kBAFU;AAAA,8CAGTX,QAAQC,GAAR,CAAYU,MAAZ,CAHS;;AAAA;AAAA;AAAA;AAAA,kBAKV,IAAIG,KAAJ,cALU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AASAC;AACAC,OAAOC,OAAP,GAAiB,EAAER,wBAAF,EAAjB","file":"database.js","sourcesContent":["import Database from 'arangojs';\n// import { generateUsers } from '../data/faker';\nrequire('dotenv').config();\n\nconst db = new Database('http://localhost:8529');\n// const basePath = 'cos730-users.mjshika.xyz/api/v0.0.1/';\nconsole.log(process.env.ARANGODB_USERNAME);\ndb.useBasicAuth(process.env.ARANGODB_USERNAME, process.env.ARANDODB_PASSWORD); // Might need to move this to env variables\n\n// db.createDatabase('Users').then(\n//   () => console.log('Database created'),\n//   err => console.error('Failed to create database:', err),\n// );\n\ndb.useDatabase('Users');\n\n\nconst collection = db.collection('UserDetails');\n\n// // Create a user detail table/collection\n// collection.create().then(\n//   () => console.log('Collection created'),\n//   err => console.error('Failed to create collection:', err),\n// );\n//\n//\n// // Populate with fake data\n// collection.import(generateUsers()).then(\n//   result => console.log('Import complete:', result),\n//   err => console.error('Import failed:', err),\n// );\n\n// db.dropDatabase('Users');\n\nconst getAllUsers = async function () {\n  try {\n    const cursor = await db.query('FOR doc IN UserDetails RETURN doc');\n    const result = await cursor.all();\n    return result;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nconst createUsers = async function () {\n  try {\n    const cursor = await db.query('INSERT { name: \"John Doe\", gender: \"m\" } INTO UserDetails RETURN NEW');\n    return console.log(cursor);\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\ncreateUsers()\nmodule.exports = { getAllUsers };\n\n"]}