{"version":3,"sources":["../../../app/services/database.js"],"names":["require","config","db","Database","useBasicAuth","process","env","ARANGODB_USERNAME","ARANDODB_PASSWORD","useDatabase","getUserById","userId","query","aql","params","userid","cursor","next","result","Error","getAllUsers","all","createUser","user","module","exports"],"mappings":";;;;;AAAA;;;;;;AAEAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA,IAAMC,KAAK,IAAIC,kBAAJ,CAAa,uBAAb,CAAX;AACAD,GAAGE,YAAH,CAAgBC,QAAQC,GAAR,CAAYC,iBAA5B,EAA+CF,QAAQC,GAAR,CAAYE,iBAA3D;;AAEAN,GAAGO,WAAH,CAAe,OAAf;;AAEA;AACA,IAAMC;AAAA,qEAAc,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKT,GAAGU,KAAH,KAASC,aAAT,mBAA8CF,OAAOG,MAAP,CAAcC,MAA5D,EAFL;;AAAA;AAEVC,kBAFU;AAAA;AAAA,mBAGKA,OAAOC,IAAP,EAHL;;AAAA;AAGVC,kBAHU;AAAA,6CAITA,MAJS;;AAAA;AAAA;AAAA;AAAA,kBAMV,IAAIC,KAAJ,aANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAUA;AACA,IAAMC;AAAA,sEAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEKlB,GAAGU,KAAH,CAAS,mCAAT,CAFL;;AAAA;AAEVI,kBAFU;AAAA;AAAA,mBAGKA,OAAOK,GAAP,EAHL;;AAAA;AAGVH,kBAHU;AAAA,8CAITA,MAJS;;AAAA;AAAA;AAAA;AAAA,kBAMV,IAAIC,KAAJ,cANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAUA;AACA,IAAMG;AAAA,sEAAa,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMrB,GAAGU,KAAH,KAASC,aAAT,oBAAsBU,IAAtB,EAFN;;AAAA;AAETP,kBAFS;AAAA,8CAGRA,MAHQ;;AAAA;AAAA;AAAA;AAAA,kBAKT,IAAIG,KAAJ,cALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AASA;AACA;;AAEAK,OAAOC,OAAP,GAAiB,EAAEL,wBAAF,EAAeE,sBAAf,EAA2BZ,wBAA3B,EAAjB","file":"database.js","sourcesContent":["import { Database, aql } from 'arangojs';\n\nrequire('dotenv').config();\n\nconst db = new Database('http://localhost:8529');\ndb.useBasicAuth(process.env.ARANGODB_USERNAME, process.env.ARANDODB_PASSWORD);\n\ndb.useDatabase('Users');\n\n// Retrieve user by id\nconst getUserById = async (userId) => {\n  try {\n    const cursor = await db.query(aql`RETURN DOCUMENT(\"UserDetails\", ${userId.params.userid})`);\n    const result = await cursor.next();\n    return result;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n// Retrieve all users from db\nconst getAllUsers = async () => {\n  try {\n    const cursor = await db.query('FOR doc IN UserDetails RETURN doc');\n    const result = await cursor.all();\n    return result;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n// Insert user into db\nconst createUser = async (user) => {\n  try {\n    const cursor = await db.query(aql`INSERT ${user} IN UserDetails RETURN NEW`);\n    return cursor;\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\n// Update a user object - Full or partial update\n// FOR u IN users UPDATE u._key WITH { name: CONCAT(u.firstName, \" \", u.lastName) } IN users\n\nmodule.exports = { getAllUsers, createUser, getUserById };\n\n"]}